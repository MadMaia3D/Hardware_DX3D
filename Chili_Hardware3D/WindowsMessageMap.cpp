#include "WindowsMessageMap.h"
#include <sstream>
#include <iomanip>

#define REGISTER_MESSAGE(msg){msg, #msg}

WindowsMessageMap::WindowsMessageMap()
	:
	map({
	REGISTER_MESSAGE(WM_CREATE),
	REGISTER_MESSAGE(WM_DESTROY),
	REGISTER_MESSAGE(WM_CLOSE),
	REGISTER_MESSAGE(WM_QUIT),
	REGISTER_MESSAGE(WM_PAINT),
	REGISTER_MESSAGE(WM_SIZE),
	REGISTER_MESSAGE(WM_MOVE),
	REGISTER_MESSAGE(WM_KEYDOWN),
	REGISTER_MESSAGE(WM_KEYUP),
	REGISTER_MESSAGE(WM_CHAR),
	REGISTER_MESSAGE(WM_LBUTTONDOWN),
	REGISTER_MESSAGE(WM_LBUTTONUP),
	REGISTER_MESSAGE(WM_RBUTTONDOWN),
	REGISTER_MESSAGE(WM_RBUTTONUP),
	REGISTER_MESSAGE(WM_MOUSEMOVE),
	REGISTER_MESSAGE(WM_COMMAND),
	REGISTER_MESSAGE(WM_TIMER),
	REGISTER_MESSAGE(WM_ACTIVATE),
	REGISTER_MESSAGE(WM_SETFOCUS),
	REGISTER_MESSAGE(WM_KILLFOCUS),
	REGISTER_MESSAGE(WM_ENABLE),
	REGISTER_MESSAGE(WM_SETREDRAW),
	REGISTER_MESSAGE(WM_SETTEXT),
	REGISTER_MESSAGE(WM_GETTEXT),
	REGISTER_MESSAGE(WM_GETTEXTLENGTH),
	REGISTER_MESSAGE(WM_ERASEBKGND),
	REGISTER_MESSAGE(WM_SYSCOLORCHANGE),
	REGISTER_MESSAGE(WM_SHOWWINDOW),
	REGISTER_MESSAGE(WM_WININICHANGE),
	REGISTER_MESSAGE(WM_DEVMODECHANGE),
	REGISTER_MESSAGE(WM_ACTIVATEAPP),
	REGISTER_MESSAGE(WM_FONTCHANGE),
	REGISTER_MESSAGE(WM_TIMECHANGE),
	REGISTER_MESSAGE(WM_CANCELMODE),
	REGISTER_MESSAGE(WM_SETCURSOR),
	REGISTER_MESSAGE(WM_MOUSEACTIVATE),
	REGISTER_MESSAGE(WM_CHILDACTIVATE),
	REGISTER_MESSAGE(WM_QUEUESYNC),
	REGISTER_MESSAGE(WM_GETMINMAXINFO),
	REGISTER_MESSAGE(WM_ICONERASEBKGND),
	REGISTER_MESSAGE(WM_NEXTDLGCTL),
	REGISTER_MESSAGE(WM_SPOOLERSTATUS),
	REGISTER_MESSAGE(WM_DRAWITEM),
	REGISTER_MESSAGE(WM_MEASUREITEM),
	REGISTER_MESSAGE(WM_DELETEITEM),
	REGISTER_MESSAGE(WM_VKEYTOITEM),
	REGISTER_MESSAGE(WM_CHARTOITEM),
	REGISTER_MESSAGE(WM_SETFONT),
	REGISTER_MESSAGE(WM_GETFONT),
	REGISTER_MESSAGE(WM_SETHOTKEY),
	REGISTER_MESSAGE(WM_GETHOTKEY),
	REGISTER_MESSAGE(WM_QUERYDRAGICON),
	REGISTER_MESSAGE(WM_COMPAREITEM),
	REGISTER_MESSAGE(WM_COMPACTING),
	REGISTER_MESSAGE(WM_WINDOWPOSCHANGING),
	REGISTER_MESSAGE(WM_WINDOWPOSCHANGED),
	REGISTER_MESSAGE(WM_POWER),
	REGISTER_MESSAGE(WM_COPYDATA),
	REGISTER_MESSAGE(WM_CANCELJOURNAL),
	REGISTER_MESSAGE(WM_NOTIFY),
	REGISTER_MESSAGE(WM_INPUTLANGCHANGEREQUEST),
	REGISTER_MESSAGE(WM_INPUTLANGCHANGE),
	REGISTER_MESSAGE(WM_TCARD),
	REGISTER_MESSAGE(WM_HELP),
	REGISTER_MESSAGE(WM_USERCHANGED),
	REGISTER_MESSAGE(WM_NOTIFYFORMAT),
	REGISTER_MESSAGE(WM_CONTEXTMENU),
	REGISTER_MESSAGE(WM_STYLECHANGING),
	REGISTER_MESSAGE(WM_STYLECHANGED),
	REGISTER_MESSAGE(WM_DISPLAYCHANGE),
	REGISTER_MESSAGE(WM_GETICON),
	REGISTER_MESSAGE(WM_SETICON),
	REGISTER_MESSAGE(WM_NCCREATE),
	REGISTER_MESSAGE(WM_NCDESTROY),
	REGISTER_MESSAGE(WM_NCCALCSIZE),
	REGISTER_MESSAGE(WM_NCHITTEST),
	REGISTER_MESSAGE(WM_NCPAINT),
	REGISTER_MESSAGE(WM_NCACTIVATE),
	REGISTER_MESSAGE(WM_GETDLGCODE),
	REGISTER_MESSAGE(WM_SYNCPAINT),
	REGISTER_MESSAGE(WM_NCMOUSEMOVE),
	REGISTER_MESSAGE(WM_NCLBUTTONDOWN),
	REGISTER_MESSAGE(WM_NCLBUTTONUP),
	REGISTER_MESSAGE(WM_NCLBUTTONDBLCLK),
	REGISTER_MESSAGE(WM_NCRBUTTONDOWN),
	REGISTER_MESSAGE(WM_NCRBUTTONUP),
	REGISTER_MESSAGE(WM_NCRBUTTONDBLCLK),
	REGISTER_MESSAGE(WM_NCMBUTTONDOWN),
	REGISTER_MESSAGE(WM_NCMBUTTONUP),
	REGISTER_MESSAGE(WM_NCMBUTTONDBLCLK)
		})
{}

std::string WindowsMessageMap::operator()(UINT uMsg, WPARAM wParam, LPARAM lParam) const {
	auto it = map.find(uMsg);

	const int firstColWidth = 25;
	const int paramColWidth = 8;
	std::ostringstream oss;

	if (it != map.end()) {
		oss << std::left << std::setw(firstColWidth) << it->second;
	} else {
		oss << std::left << std::setw(firstColWidth) << "UNKNOWN_MESSAGE";
	}
	oss << "	WP: 0x" << std::hex << std::setfill('0') << std::setw(paramColWidth) << wParam;
	oss << "	LP: 0x" << std::hex << std::setfill('0') << std::setw(paramColWidth) << lParam << std::endl;

	return oss.str();
}
